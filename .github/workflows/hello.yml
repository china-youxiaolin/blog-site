name: Build and Deploy

on: # 事件
  push:
    branches:
      - master #推送到远程分支main之后触发
jobs: # 任务
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2.3.1

      - name: Install and Build 🔧 # 此示例项目使用npm构建，并将结果输出到“build”文件夹。替换为生成项目所需的命令，或者如果站点是预构建的，则完全删除此步骤.
        run: |
          npm install   # 先安装依赖
          npm run docs:build # 执行打包命令

      - name: Deploy 🚀
        uses: JamesIves/github-pages-deploy-action@4.1.6
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }} # 自己仓库配置的令牌
        with:
          branch: gh-pages # 将打包后的目录部署在gh-pages分支
          folder: docs/.vitepress/dist # 打包后生成的目录地址

      #以下配置同步代码到gitee仓库并自动部署
      - name: Sync to Gitee
        uses: wearerequired/git-mirror-action@master
        env:
          # 注意在 Settings->Secrets 配置 GITEE_RSA_PRIVATE_KEY
          SSH_PRIVATE_KEY: ${{ secrets.GITEE_RSA_PRIVATE_KEY }} # 仓库配置的私钥
        with:
          # 注意替换为你的 GitHub 源仓库地址
          source-repo: git@github.com:china-youxiaolin/blog-site.git
          # 注意替换为你的 Gitee 目标仓库地址
          destination-repo: git@gitee.com:you-xiaolin/blog-site.git

      - name: Build Gitee Pages
        uses: yanglbme/gitee-pages-action@main
        with:
          # 注意替换为你的 Gitee 用户名
          gitee-username: you-xiaolin
          # 注意在 Settings->Secrets 配置 GITEE_PASSWORD
          gitee-password: ${{ secrets.GITEE_PASSWORD }}
          # 注意替换为你的 Gitee 仓库，仓库名严格区分大小写，请准确填写，否则会出错
          gitee-repo: youxiaolin/blog-site
          # 要部署的分支，默认是 master，若是其他分支，则需要指定(指定的分支必须存在)
          branch: gh-pages
